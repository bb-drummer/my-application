---

apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: {{ project }}-{{ service.name }}-{{ app_env }}-deployment
  namespace: {{ namespace }}
  labels:
    app: {{ project }}
    module: {{ service.name }}
    environment: {{ app_env }}
    release: {{ releases[service.name] }}
    team: {{ teamlabel }}
  annotations:
    project-url: "https://{{ hostnames[app_env][0] }}"
    epoch: "{{ ansible_date_time.iso8601 }}"
spec:
  selector:
    matchLabels:
      app: {{ project }}
      module: {{ service.name }}
      environment: {{ app_env }}
      team: {{ teamlabel }}
  replicas: 1
  strategy:
    type: RollingUpdate
  progressDeadlineSeconds: 600
  template:
    metadata:
      annotations:
        project-url: "https://{{ hostnames[app_env][0] }}"
      labels:
        app: {{ project }}
        module: {{ service.name }}
        environment: {{ app_env }}
        release: {{ releases[service.name] }}
        team: {{ teamlabel }}
    spec:
      volumes:
        - name: {{ project }}-{{ app_env }}-persistent-storage
          persistentVolumeClaim:
            claimName: {{ project }}-{{ app_env }}-pv-claim
      imagePullSecrets:
        - name: docker-login
      containers:
        - name: {{ project }}-app
          image: bbdrummer/{{ project }}:{{ releases[service.name] }}
          imagePullPolicy: Always
          envFrom:
            - secretRef:
                name: {{ project }}-{{ app_env }}-application-env
          ports:
            - containerPort: {{ service.port }}
          resources:
            limits:
              memory: "256Mi"
              cpu: "1000m"
            requests:
              memory: "128Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /
              port: {{ service.port }}
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 3
            failureThreshold: 5
          volumeMounts:
            - name: {{ project }}-{{ app_env }}-persistent-storage
              mountPath: /var/www/public/uploads

---

#Service Declaration
apiVersion: v1
kind: Service
metadata:
  name: {{ project }}-{{ service.name }}-{{ app_env }}-service
  namespace: {{ namespace }}
  labels:
    app: {{ project }}
    module: {{ service.name }}
    environment: {{ app_env }}
    release: {{ releases[service.name] }}
    team: {{ teamlabel }}
  annotations:
    project-url: "https://{{ hostnames[app_env][0] }}"
    epoch: "{{ ansible_date_time.iso8601 }}"
spec:
  type: NodePort
  ports:
    - port: {{ service.port }}
      targetPort: {{ service.port }}
  selector:
    app: {{ project }}
    module: {{ service.name }}
    environment: {{ app_env }}
    team: {{ teamlabel }}

---

apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ project }}-{{ service.name }}-{{ app_env }}-autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ project }}-{{ service.name }}-{{ app_env }}-deployment
  minReplicas: 2
  maxReplicas: 16
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
